# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET         /                                  controllers.Application.index()

# TODO: check the GET route below are needed or not
# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                      controllers.Assets.at(path="/public", file)

GET         /app/bower_components/*file        controllers.ConfigurableAssets.at(path="/bower_components", file)
GET         /app/*file                         controllers.ConfigurableAssets.at(path="/app", file)

# QUALI-47: POC: Backend-Service erstellen und mit Client-App verbinden
GET         /api/get/nfr/first                 controllers.Application.getFirstQA()

# AUTHENTICATION
POST        /api/auth/login                    controllers.Authentication.login()
POST        /api/auth/logout                   controllers.Authentication.logout()
POST        /api/auth/register                 controllers.Authentication.register()
POST        /api/auth/changePw                 controllers.Authentication.changePassword()

# Tasks and Roles
GET         /api/mytasks/                      controllers.Misc.getTasksOfCurrentUser()

# Favorites
GET         /api/myfavorites/                  controllers.Misc.getFavoritesOfCurrentUser()

# Testing
GET         /api/set/custproject/:cust         controllers.Application.setCustomerProject(cust: String)

# Customer
POST        /api/customer                      controllers.Customer.createCustomer()
GET         /api/customer                      controllers.Customer.getAll()
#PUT         /api/customer                      controllers.Customer.updateCustomer()

# Quality Attribute
POST        /api/qa                            controllers.QualityAttribute.createQA()
GET         /api/qa                            controllers.QualityAttribute.getAllQAs()
GET         /api/qa/catalog=:id                controllers.QualityAttribute.getQAsByCatalog(id: Long)

# Project
POST        /api/project                       controllers.Project.createProject()

# Catalog
GET         /api/catalog                       controllers.Catalog.getAllCatalogs()
POST        /api/catalog                       controllers.Catalog.create()

# QACategories
GET         /api/cat/:parent,:name             controllers.QualityAttribute.createSubCat(parent: Long, name: String)
GET         /api/cat/:name                     controllers.QualityAttribute.createCat(name: String)
GET         /api/cat/get/:id                   controllers.QualityAttribute.getCategoryTree(id: Long)
GET         /api/cat                           controllers.QualityAttribute.getAllCats()

# Search
GET         /api/search/:searchArgument        controllers.Search.search(searchArgument: String)