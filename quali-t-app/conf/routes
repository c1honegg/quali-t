# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET           /                                  controllers.Application.index()

# TODO: check the GET route below are needed or not
# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                      controllers.Assets.at(path="/public", file)

GET           /app/bower_components/*file        controllers.ConfigurableAssets.at(path="/bower_components", file)
GET           /app/*file                         controllers.ConfigurableAssets.at(path="/app", file)

# QUALI-47: POC: Backend-Service erstellen und mit Client-App verbinden
GET           /api/get/nfr/first                 controllers.Application.getFirstQA()

# AUTHENTICATION
POST          /api/auth/login                    controllers.Authentication.login()
POST          /api/auth/logout                   controllers.Authentication.logout()
POST          /api/auth/register                 controllers.Authentication.register()
POST          /api/auth/changePw                 controllers.Authentication.changePassword()

# USER
GET           /api/mytasks/                      controllers.Misc.getTasksOfCurrentUser()
POST          /api/mytasks/toggle/               controllers.Misc.toggleStateOfTask()

# Favorites
GET           /api/myfavorites/                  controllers.Misc.getFavoritesOfCurrentUser()

# Search
GET           /api/search/                       controllers.Search.search(searchArgument: String ?= "")
GET           /api/search/:searchArgument        controllers.Search.search(searchArgument: String)

# Testing
GET           /api/set/custproject/:cust         controllers.Application.setCustomerProject(cust: String)

# Customer
POST          /api/customer                      controllers.Customer.createCustomer()
GET           /api/customer                      controllers.Customer.getAll()
PUT           /api/customer            controllers.Customer.updateCustomer()
DELETE        /api/customer/:id        controllers.Customer.deleteCustomer(id: Long)

# Quality Attribute
POST          /api/qa                            controllers.QualityAttribute.createQA()
GET           /api/qa                            controllers.QualityAttribute.getAllQAs()
GET           /api/qa/catalog=:id                controllers.QualityAttribute.getQAsByCatalog(id: Long)
PUT           /api/qa                  controllers.QualityAttribute.updateQA()
DELETE        /api/qa/:id              controllers.QualityAttribute.deleteQA(id: Long)
DELETE        /api/qa/:id              controllers.QualityAttribute.deleteQA(id: Long)

# Project
POST          /api/project                       controllers.Project.createProject()
GET           /api/project                       controllers.Project.getAllProjects()
GET           /api/project=:id                   controllers.Project.getProject(id: Long)

# Catalog
GET           /api/catalog                       controllers.Catalog.getAllCatalogs()
POST        /api/catalog        controllers.Catalog.createCatalog()
#PUT           /api/catalog
#DELETE        /api/catalog

# QACategories
#GET         /api/cat/:parent,:name             controllers.QualityAttribute.createSubCat(parent: Long, name: String)
POST          /api/cat                 controllers.QACategory.createCat()
#GET         /api/cat/get/:id                   controllers.QualityAttribute.getCategoryTree(id: Long)
GET           /api/cat                 controllers.QACategory.getAllCats()
DELETE        /api/cat/:id             controllers.QACategory.deleteCat(id: Long)
PUT           /api/cat                 controllers.QACategory.updateCat()

# QualityProperties
GET           /api/qp                  controllers.QualityProperty.getAllQualityProperties()
POST          /api/qp                  controllers.QualityProperty.createQualityProptery()
PUT           /api/qp                  controllers.QualityProperty.updateQualityProperty()
DELETE        /api/qp/:id              controllers.QualityProperty.deleteQualityProperty(id: Long)
